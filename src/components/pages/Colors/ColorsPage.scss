// Define SCSS variables
$base-font-size: 16px;
$column-padding: 15px;
$background-color: #f4f4f4;
$text-color: #333;
$item-padding: 10px;

// ColorPage Wrapper
.ColorPage {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    width: 100%;
    height: 100vh;
    background-color: $background-color;
    font-size: $base-font-size;
    color: $text-color;

    .column {
        flex: 1 0 33%;
        display: flex;
        flex-direction: column;
        padding: $column-padding;
        overflow-y: auto; // Default overflow for all columns
        height: 100%;

        // Styles for common elements inside columns
        button {
            padding: $item-padding;
            margin: $item-padding / 2;
            background-color: lighten($background-color, 10%);
            border: 1px solid darken($background-color, 10%);
            border-radius: 4px;
            cursor: pointer;

            &:hover {
                background-color: lighten($background-color, 20%);
            }
        }

        textarea {
            font-family: monospace;
            font-size: $base-font-size;
            padding: $item-padding;
            border: 1px solid darken($background-color, 10%);
            border-radius: 4px;
        }
    }

    // InputColumn specific styles
    .InputColumn {
        textarea {
            flex: 1;
            resize: none; // Prevent resizing of the textarea
        }
    }

    // ColorEditColumn specific styles
    .ColorEditColumn {
        overflow-y: auto; // Ensures this column is scrollable if content is too long

        .ColorEdit {
            position: relative;
            //padding: $item-padding;
            //margin-bottom: $item-padding;
            //border: 1px solid darken($background-color, 10%);
            //border-radius: 4px;
            transition: background-color 0.3s ease;
            min-height: 50px;

            &:hover {
                background-color: lighten($background-color, 10%);
            }
        }
    }

    // OutputColumn specific styles
    .OutputColumn {
        overflow-y: auto; // Makes this column scrollable if content overflows

        .tab-bar {
            display: flex;
            margin-bottom: $item-padding;

            button {
                flex: 1;
                text-align: center;
                background-color: $background-color;

                &.active {
                    background-color: lighten($background-color, 20%);
                }
            }
        }

        .tab-content {
            flex: 1;
            padding: $item-padding;
            border: 1px solid darken($background-color, 10%);
            border-radius: 4px;

            .color-swatches,
            .text-preview {
                height: 100%;
            }

            .color-swatches {
                display: flex;
                flex-direction: column;

                > div {
                    flex: 1;
                    //margin-bottom: $item-padding / 2;
                }
            }

            .text-preview {
                textarea {
                    width: 100%;
                    height: 100%;
                    resize: none;
                }
            }
        }
    }

    .button-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: $item-padding / 2 0;

        &.top {
            margin-bottom: $item-padding;
        }

        &.bottom {
            margin-top: $item-padding;
        }

        label {
            display: flex;
            align-items: center;

            input[type="checkbox"] {
                width: 24px; // Increase checkbox size
                height: 24px;
                margin-right: 8px; // Space between checkbox and label text
            }

            span {
                font-size: $base-font-size * 1.2; // Larger text for the label
                font-weight: bold;
            }
        }
    }

    .picker_wrapper {
        z-index: 10000; // Ensure it's above other elements
        //position: fixed; // Use fixed positioning for overlay
    }
}

// Variables for consistency
$swatch-border-radius: 4px;
$swatch-border-width: 1px;
$swatch-border-color: #ddd;

.color-swatch {
    width: 100%;
    height: 100%;
    border-radius: $swatch-border-radius;
    border: $swatch-border-width solid $swatch-border-color;
    cursor: pointer; // For clickable swatches

    // Remove any existing styles that might hide or misposition the picker
    .color-picker,
    .color-picker .popup {
        z-index: 10000;
        position: fixed;
        display: block !important; // Override any display: none
    }
}

// For non-clickable swatches, you might want to set:
.color-swatch.non-clickable {
    cursor: default;
}
